plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.7.20'
    id 'org.jetbrains.dokka' version '1.7.20'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group = 'io.hikarilan'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.13-R0.1-SNAPSHOT'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    implementation 'org.jetbrains:annotations:16.0.2'

    implementation 'org.greenrobot:eventbus-java:3.3.1'

    implementation 'org.bstats:bstats-bukkit:3.0.0'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    dokkaHtmlPlugin 'org.jetbrains.dokka:kotlin-as-java-plugin:1.7.20'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

artifacts {
    archives shadowJar
}

shadowJar {
    dependencies {
        exclude '*kotlin*'
    }
    relocate('org.greenrobot.eventbus', 'io.hikarilan.gamesenselib.shade.org.greenrobot.eventbus')
    relocate('org.jetbrains.annotations', 'io.hikarilan.gamesenselib.shade.org.jetbrains.annotations')
    relocate('org.bstats', 'io.hikarilan.gamesenselib.shade.org.bstats')
    minimize()
}
